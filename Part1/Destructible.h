#pragma once
//std includes
#include <string>
//local includes
class Actor;

////////////////////////////////////////////////////////////////////
// Destructible class
////////////////////////////////////////////////////////////////////


class Destructible
{
public:
	float maxHp; // maximum health points
	float hp; // current health points
	float defense; // hit points deflected
	std::string corpseName; // the actor's name once dead/destroyed

	Destructible(float maxHp, float defense, const std::string& corpseName);
	virtual ~Destructible() = default;

	inline bool isDead() { return hp <= 0; }
	float takeDamage(Actor* owner, float damage);
	virtual void die(Actor* owner);
};

////////////////////////////////////////////////////////////////////
// End Destructible class
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
// MonsterDestructible  class
////////////////////////////////////////////////////////////////////

class MonsterDestructible : public Destructible
{
public:
	MonsterDestructible(float maxHp, float defense, const char* corpseName);
	virtual void die(Actor* owner) override;
};

////////////////////////////////////////////////////////////////////
// End MonsterDestructible class
////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////
// PlayerDestructible class
////////////////////////////////////////////////////////////////////

class PlayerDestructible : public Destructible
{
public:
	PlayerDestructible(float maxHp, float defense, const char* corpseName);
	virtual void die(Actor* owner) override;
};

////////////////////////////////////////////////////////////////////
// End PlayerDestructible class
////////////////////////////////////////////////////////////////////
